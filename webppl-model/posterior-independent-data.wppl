// Retrieve data from R
var observed_ratings = data["probs"]

// generate new independent probability tables with parameters provided from R//
var sample_table = function(){
  var params = data["evs_params"][0]
  var pars_blue = {
    alpha: params.alpha_blue, gamma: params.gamma_blue,
    shape1: params.shape1_blue, shape2: params.shape2_blue
  }
  var pars_green = {
    alpha: params.alpha_green, gamma: params.gamma_green,
    shape1: params.shape1_green, shape2: params.shape2_green
  }
  var pars_bg = {
    sd: params.sd_delta
  }
  var table = sample_independent_table(pars_blue, pars_green, pars_bg)
  return(table)
}

// specify model
var non_normalized_posterior = function(){

  // draws from prior
  var pars_blue = sample_zoib_prior()
  var pars_green = sample_zoib_prior()
  var pars_bg = sample_prior_bg()

  var ll = mapIndexed(function(i, obs){
    // log likelihood P(blue) and P(green)
    var ll_blue = get_zoib_likelihood(obs.blue, pars_blue)
    var ll_green = get_zoib_likelihood(obs.green, pars_green)
    //display("ll_blue: " + ll_blue + " ll_green: " + ll_green)

    // log likelihood P(b, g)
    var ll_bg = get_likelihood_bg(obs, pars_bg)
    //display("val: " + val + " ll_bg: " + ll_bg)
    // display("ll_bg: " + ll_bg + " ll_blue: " + ll_blue + " ll_green: " + ll_green)
    var ll = ll_bg + ll_blue + ll_green
    return(ll)
  }, observed_ratings)

 //display("sum(ll): " + sum(ll))
 factor(sum(ll))

 return({
   shape1_blue: pars_blue.shape1, shape2_blue: pars_blue.shape2,
   gamma_blue: pars_blue.gamma, alpha_blue: pars_blue.alpha,

   shape1_green: pars_green.shape1, shape2_green: pars_green.shape2,
   gamma_green: pars_green.gamma, alpha_green: pars_green.alpha,

   sd_delta: pars_bg.sd
  })
}
